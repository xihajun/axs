# After changing this file, check it on:
#   http://lint.travis-ci.org/

os:         linux
dist:       focal
language:   python

branches:
  except:
    - /^mlperf_.*/  # Exclude tags starting with "mlperf_"

matrix:
  fast_finish: true
  allow_failures:
    # - os: windows       # tar confused by colon in C:\... names - see https://steve-parker.org/linux/tar-colon-filename/
    - os: freebsd       # missing bash
    - arch: ppc64le     # missing torchvision 0.10.1
    - arch: s390x       # missing torchvision 0.10.1

  include:
    - language: python
      python: "3.11"
      dist: jammy
      env:
        - PACKAGE_INSTALL_AND_IMPORT=on
        - C_COMPILE_AND_RUN=on
        - PYTHON_EXE=python

    - language: python
      python: "3.11"
      dist: jammy
      env:
        - TF_CLASSIFY=on
        - PYTHON_EXE=python

    - language: python
      python: "3.11"
      dist: jammy
      env:
        - PYTORCH_CLASSIFY=on
        - PYTHON_EXE=python

    - language: python
      python: "3.10.8"
      dist: jammy
      env:
        - ONNX_CLASSIFY=on
        - PYTHON_EXE=python

    - language: python
      python: 3.9
      env:
        - PYTORCH_BERT_DEMO=on
        - PYTHON_EXE=python

    - language: python
      python: 3.9
      env:
        - ONNX_BERT_SQUAD=on
        - PYTHON_EXE=python

    - os: osx
      osx_image: xcode12.5  # Python 3.9.5
      language: shell       # 'language: python' is an error on Travis CI macOS
      env:
        - ONNX_CLASSIFY=on
        - PACKAGE_INSTALL_AND_IMPORT=on
        - C_COMPILE_AND_RUN=on
        - PYTHON_EXE=python3

    - name: "Python 3.9 on Windows, ONNX_BERT_SQUAD"
      os: windows           # Windows 10.0.17134 N/A Build 17134
      language: shell       # 'language: python' is an error on Travis CI Windows
      env:
        - ONNX_BERT_SQUAD=on
        - PYTHON_EXE=python3
        - PATH=/c/Python39:/c/Python39/Scripts:$PATH
      before_install:
        - choco install python39
        - cmd <<< "mklink C:\\Python39\\python3.exe C:\\Python39\\python.exe"
        - cmd <<< "mklink C:\\Python39\\python3.9.exe C:\\Python39\\python.exe"
        - choco install gzip
        - python -m pip install --upgrade pip
        - ln -s /c/Windows/System32/tar.exe /c/Python39

    - language: python
      python: 3.8
      env:
        - ONNX_DETECTION=on
        - PYTHON_EXE=python

    - language: python
      python: 3.8
      env:
        - PYTORCH_CLASSIFY=on
        - PYTHON_EXE=python

    - language: python
      python: "3.7.15"
      env:
        - TF_CLASSIFY=on
        - PYTHON_EXE=python

    - language: python
      python: 3.6
      env:
        - ONNX_CLASSIFY=on
        - PYTHON_EXE=python

    - name: "Python 3.8 on FreeBSD"
      os: freebsd
      addons:
        pkg:
          - bash
      language: python
      python: 3.8
      env:
        - PYTHON_EXE=python

    - name: "Python 3.6 on IBM Power"
      arch: ppc64le
      os: linux
      language: python
      python: 3.6
      env:
        - PYTHON_EXE=python
        - C_COMPILE_AND_RUN=on

    - name: "Python 3.6 on IBM Z"
      arch: s390x
      os: linux
      language: python
      python: 3.6
      env:
        - PYTHON_EXE=python
        - C_COMPILE_AND_RUN=on
      #before_install:
        # work around cache dir owned by root (see https://travis-ci.community/t/7822/6)
        #- sudo chown -fR $USER:$GROUP ~/.cache/pip/wheels

install:
    - CWD=`pwd`
    - PATH=$PATH:$CWD
    - THIS_REPO_NAME=`basename $CWD`
    - echo "TRAVIS_OS_NAME=${TRAVIS_OS_NAME}, TRAVIS_PYTHON_VERSION=${TRAVIS_PYTHON_VERSION}"
    - echo "CWD=${CWD}, THIS_REPO_NAME=${THIS_REPO_NAME}, PATH=${PATH}"
    - which ${PYTHON_EXE}
    - ${PYTHON_EXE} --version
    - which git
    - git --version
    - wget https://raw.github.com/lehmannro/assert.sh/master/assert.sh
    - axs byname pip , available_versions --package_name=numpy --force_binary+
    - axs byname pip , available_versions --package_name=pillow --force_binary+

script:
    - ${PYTHON_EXE} function_access.py
    - ${PYTHON_EXE} param_source.py
    - ${PYTHON_EXE} runnable.py
    - ${PYTHON_EXE} stored_entry.py
    - ${PYTHON_EXE} kernel.py
    - bash test_axs.sh
